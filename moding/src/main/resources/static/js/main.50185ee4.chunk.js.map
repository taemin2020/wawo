{"version":3,"sources":["App.js","customAxios.js","reportWebVitals.js","index.js"],"names":["App","useState","ip","setIp","callback","data","useEffect","url","axios","method","then","response","customAxios","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA8BeA,MA1Bf,WAAe,MAEOC,mBAAS,IAFhB,mBAENC,EAFM,KAEFC,EAFE,KAKb,SAASC,EAASC,GAChBF,EAAME,GAWR,OAPAC,qBACE,YCbW,SAAqBC,EAAKH,GACvCI,IACE,CACED,IAAK,OAASA,EACdE,OAAQ,SAWVC,MAAK,SAAUC,GACfP,EAASO,EAASN,SDDhBO,CAAY,MAAOR,KAClB,IAIH,qBAAKS,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,4DACeX,EADf,4BEXSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.50185ee4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport customAxios from './customAxios';\n\nfunction App() {\n  // IP주소 변수 선언\n  const [ip, setIp] = useState('');\n\n  // IP주소 값을 설정합니다.\n  function callback(data) {\n    setIp(data);\n  }\n\n  // 첫번째 렌더링을 다 마친 후 실행합니다.\n  useEffect(\n    () => {\n      // 클라이언트의 IP주소를 알아내는 백엔드의 함수를 호출합니다.\n      customAxios('/ip', callback);\n    }, []\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        이 기기의 IP주소는 {ip}입니다.\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import axios from 'axios'; // 액시오스\n\nexport default function customAxios(url, callback) {\n  axios(\n    {\n      url: '/api' + url,\n      method: 'post',\n\n      /**\n       * 개발 환경에서의 크로스 도메인 이슈를 해결하기 위한 코드로\n       * 운영 환경에 배포할 경우에는 15~16행을 주석 처리합니다.\n       * \n       * ※크로스 도메인 이슈: 브라우저에서 다른 도메인으로 URL 요청을 하는 경우 나타나는 보안문제\n       */\n      // baseURL: 'http://localhost:8080',\n      // withCredentials: true,\n    }\n  ).then(function (response) {\n    callback(response.data);\n  });\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}